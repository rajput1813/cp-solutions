#include<bits/stdc++.h>
using namespace std;
#define ll long long
vector<ll>v1[100];
bool vis[1000];
	ll dis[1000];
	for(ll i=0;i<1000;i++){
		vis[i]=false;
		dis[i]=INT_MAX;
		
		}
void addEdge(int u, int v) 
{ 
    v1[u].push_back(v); 
    v1[v].push_back(u); 
} 
void dfs(int src){
	
	 stack<ll>s;
	s.push(src);
	vis[src]=true;cout<<src<<" ";
	
	while(!s.empty()){
		ll p=s.top();
		s.pop();
		for(ll i=0;i<v1[p].size();i++){
			if(vis[v1[p][i]]==false){
				s.push(v1[p][i]);
				vis[v1[p][i]]=true;
				cout<<v1[p][i]<<" ";
			}
		}
		
		
	}
	
} 
int main(){
	ll n,connectedComponents=0;
	cin>>n;
	addEdge( 0, 1); 
    addEdge( 0, 4); 
    addEdge( 1, 2); 
    addEdge( 1, 3); 
    addEdge( 1, 4); 
    addEdge( 2, 3); 
    addEdge( 3, 4); 
    for(int i = 1;i <= nodes;++i) {
         if(visited[i] == false)     {
             dfs(i);
             connectedComponents++;
         }
        }
}
